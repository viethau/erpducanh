@using DucAnhERP.Helpers
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer


<select id="@Id" class="form-control" disabled="@disabled">
    @if (Items != null && Items.Any())
    {
        var a = "";
        @foreach (var item in Items)
        {
            a= a+" ,"+ @item.Text;
            var text = @item.Text;
            <option value="@item.Value" selected="@item.IsSelected">@item.Text</option>
        }
        Console.WriteLine(a);
        Console.WriteLine(Id);
    }
</select>

@code {
    [Parameter] public string Id { get; set; }
    [Parameter] public List<SelectedItem> Items { get; set; } = new List<SelectedItem>();
    [Parameter] public EventCallback<SelectedItem> OnChange { get; set; }
    [Parameter] public bool disabled { get; set; } = false;

    private DotNetObjectReference<Select2> objRef;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender){}
        objRef = DotNetObjectReference.Create(this);
        await JSRuntime.InvokeVoidAsync("select2Blazor.initSelect2", Id, objRef);
    }


    [JSInvokable]
    public async Task OnChangeHandlerFromJS(string value)
    {
        if (!disabled)
        {
            SelectedItem selectedItem = Items.FirstOrDefault(item => item.Value == value);

            if (selectedItem != null)
            {
                await OnChange.InvokeAsync(selectedItem);
            }
        }
        
    }

    public void Dispose()
    {
        objRef?.Dispose();
    }
}
