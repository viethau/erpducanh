@inject DucAnhERP.Services.ToastService ToastService

<div class="toast-container">
    @foreach (var toast in ToastService.Toasts)
    {

        <div id="@toast.Id" class="toast fade show @toast.CssClass">
            <div class="toast-header">
                <i class="@toast.IconClass" aria-hidden="true"></i>
                <strong class="me-auto">@toast.Title</strong>
                <small class="text-muted">@toast.Timestamp.ToString("M/d/yyyy h:mm:ss tt")</small>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close" @onclick="() => RemoveToast(toast.Id)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                @toast.Message
            </div>
        </div>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        ToastService.OnChange += StateHasChangedAsync;
    }

    private void RemoveToast(Guid toastId)
    {
        ToastService.RemoveToast(toastId);
    }

    private async Task StateHasChangedAsync()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ToastService.OnChange -= StateHasChangedAsync;
    }
}
