@using Microsoft.JSInterop

<div class="form-group">
    <select id="@SelectId" class="form-control select2" multiple="multiple">
        @foreach (var option in Options)
        {
            <option value="@option.Value" selected="@option.IsSelected">
                @option.Text
            </option>
        }
    </select>
</div>

@code {
    [Parameter]
    public List<SelectedItem> Options { get; set; } = new();

    [Parameter]
    public EventCallback<List<string>> SelectedValuesChanged { get; set; }

    [Inject]
    public IJSRuntime JS { get; set; } = default!;

    private string SelectId = $"select2-{Guid.NewGuid()}";
    private DotNetObjectReference<MultipleSelect2>? dotNetRef;

    [JSInvokable]
    public async Task OnSelect2Change(string[] selectedValues)
    {
        foreach (var option in Options)
        {
            option.IsSelected = selectedValues.Contains(option.Value);
        }

        var selected = Options.Where(o => o.IsSelected).Select(o => o.Value).ToList();
        await SelectedValuesChanged.InvokeAsync(selected);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("initializeSelect2", SelectId, dotNetRef);
        }
    }

    public void Dispose()
    {
        dotNetRef?.Dispose();
    }
}
