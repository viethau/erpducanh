@page "/BaoCao/TongSLHGa"
@using DucAnhERP.ViewModel
@using DucAnhERP.Models
@using DucAnhERP.Components.Pages.Common
@using System.Linq
@using DucAnhERP.SeedWork
@using DucAnhERP.Helpers
@inject NavigationManager navigation
@inject INuocMuaRepository NuocMuaRepository
@inject IDanhMucRepository DanhMucRepository

@inject DucAnhERP.Services.ToastService ToastService
<style>
    table {
        position: relative;
    }

        table thead tr td {
            /*   white-space: nowrap; */
            text-align: center;
            padding: 2px 5px;
        }
</style>
<div class="container-fluid">
   
    <div id="tableContainer ">
        <div class="table-report ">
            <div>
                <div class="mt-1">
                    <h5 class="mt-2">BẢNG THỐNG KÊ SỐ LƯỢNG HỐ GA TOÀN TUYẾN</h5>
                </div>
                <div class=" mt-2">
                    <table id="tb-left" class="table table-hover table-bordered mt-3">
                        <thead class="bg-info">
                            <tr class="bg-warning ">
                                <th class="text-center" colspan="2">Tổng hợp</th>
                                <th class="text-center">@countTrai</th>
                                <th class="text-center">@countPhai</th>
                                <th class="text-center">@Tong</th>
                            </tr> 
                            <tr>
                                <th>STT</th>
                               
                                <th onclick="@(() => SortTable("ThongTinChungHoGa_TenHoGaSauPhanLoai"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Tên hố ga sau phân loại
                                        <span class="arrow @(GetSortStyle("ThongTinChungHoGa_TenHoGaSauPhanLoai"))"></span>
                                    </div>
                                </th> 
                                <th onclick="@(() => SortTable("countTrai"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Trái tuyến
                                        <span class="arrow @(GetSortStyle("countTrai"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("countPhai"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Phải tuyến
                                        <span class="arrow @(GetSortStyle("countPhai"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("Tong"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Tổng
                                        <span class="arrow @(GetSortStyle("Tong"))"></span>
                                    </div>
                                </th>
                            </tr>

                        </thead>
                        @if (listPLHGBaoCaoModel.Any())
                        {
                            <tbody>
                               
                                @{
                                    int stt = 0;
                                }
                                @foreach (var item in listPLHGBaoCaoModel)
                                {
                                    stt++;
                                    <tr>
                                        <td class="text-center"> @stt</td>
                                        <td class="text-center"> @item.ThongTinChungHoGa_TenHoGaSauPhanLoai </td>
                                        <td class="text-center"> @item.countTrai  </td>
                                        <td class="text-center"> @item.countPhai </td>
                                        <td class="text-center"> @item.Tong </td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="25"> Không có dữ liệu</td>
                                </tr>
                            </tbody>
                        }


                    </table>
                </div>
                <div class="mt-4">
                    @if (listPLHGBaoCaoModel.Any())
                    {
                        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" ChangePageSize="ChangePageSize"></Pagination>
                    }
                </div>
            </div>
        </div>
    </div>
    <Loading IsLoading="@isLoading" LoadingText="Đang tải dữ liệu..." />
</div>


@code {

    private bool isLoading = false;
    private List<SelectedItem> selectPLDHG = new();
    private int countTrai = 0;
    private int countPhai = 0;
    private int Tong = 0;
    public List<PLHGBaoCaoModel> listPLHGBaoCaoModel { get; set; } = new();
    public List<PLHGBaoCaoModel> listModel { get; set; } = new();
    public MetaData MetaData { get; set; }
    public PLHGBaoCaoModel sLHGaModel { get; set; }

    // Khởi tạo màn hình
    protected override async Task OnInitializedAsync()
    {
        sLHGaModel = new();

        await LoadData();

    }
    // Truy vấn data theo điều kiện tìm kiếm
    private async Task LoadData()
    {
        isLoading = true;
        listModel = new();
        var repository = await NuocMuaRepository.GetBaoCaoTongSLHGa();
        listModel = repository;
        listPLHGBaoCaoModel = Paging(listModel);
        if (listModel.Count >0)
        {
            foreach(var item in listModel)
            {
                countTrai = (countTrai + item.countTrai);
                countPhai = (countPhai + item.countPhai);

            }
            Tong = countTrai + countPhai;
        }
        isLoading = false;
    }

    public async Task Search()
    {
        sLHGaModel.PageNumber = 1;
        await LoadData();
    }

    // Sắp xếp data
    private void SortTable(string columnName)
    {
        listModel = SortService.SortTable(listModel, columnName);
        sLHGaModel.PageNumber = 1;
        Paging(listModel);
    }


    // Get css cho chức năng sắp xếp
    private string GetSortStyle(string columnName)
    {
        return SortService.GetSortStyle(columnName);
    }

    // Xử lý trường hợp đổi page hiển thị
    private void SelectedPage(int page)
    {
        sLHGaModel.PageNumber = page;
        Paging(listModel);
    }

    // Xử lý trường hợp đổi số lượng bản ghi hiển thị trên page
    private void ChangePageSize(int pageSize)
    {
        sLHGaModel.PageNumber = 1;
        sLHGaModel.pageSize = pageSize;
        Paging(listModel);
    }


    // Xử lý paging
    private List<PLHGBaoCaoModel> Paging(List<PLHGBaoCaoModel> listModels)
    {
        // Đếm số bản ghi thỏa mãn
        var count = listModels.Count();

        // Lọc bản ghi theo page hiện tại và page size
        listModels = listModels.Skip((sLHGaModel.PageNumber - 1) * sLHGaModel.PageSize).Take(sLHGaModel.PageSize).ToList();

        // Xóa danh sách đang hiển thị trên màn hình
        listPLHGBaoCaoModel.Clear();

        // Thêm những bản ghi sau khi lọc vào danh sách hiển thị
        foreach (var major in listModels)
        {
            listPLHGBaoCaoModel.Add(major);
        }

        // Tạo pagelist mới

        var pagelist = new PageList<PLHGBaoCaoModel>(listPLHGBaoCaoModel, count, sLHGaModel.PageNumber, sLHGaModel.PageSize);
        MetaData = pagelist.MetaData;
        return listModels;
    }

}
