@page "/BaoCao/TongSLTDanHGa"

<style>
    table {
        position: relative;
    }

        table thead tr td {
            /*   white-space: nowrap; */
            text-align: center;
            padding: 2px 5px;
        }
</style>
<div class="container-fluid">
    <div id="tableContainer ">
        <div class="table-report ">
            <div>
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mt-2">BẢNG THỐNG KÊ SỐ LƯỢNG HỐ GA THEO TUYẾN</h5>
                    <i @onclick="ExportExcel" class="fa fa-download accent-blue mr-2" title="Download file excel" aria-hidden="true" style="cursor: pointer;"></i>
                </div>
                <div class=" mt-2">
                    <table id="tb-left" class="table table-hover table-bordered mt-3">
                        <thead class="bg-info">
                            <tr class="bg-warning text-white">
                                <th class="text-center" colspan="7">Tổng hợp</th>
                                <th class="text-center">@countTrai</th>
                                <th class="text-center">@countPhai</th>
                                <th class="text-center">@Tong</th>
                            </tr>
                            <tr>
                                <th class="text-center" rowspan="2">STT</th>
                                <th class="text-center">Thông tin chung</th>
                                <th class="text-center" colspan="2">Loại tròn</th>
                                <th class="text-center"  colspan="3">Loại vuông hoặc chữ nhật</th>
                                <th class="text-center" colspan="3">Số lượng</th>
                            </tr>
                            <tr>
                                <th onclick="@(() => SortTable("ThongTinTamDanHoGa2_PhanLoaiDayHoGa"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Tên loại tấm đan
                                        <span class="arrow @(GetSortStyle("ThongTinTamDanHoGa2_PhanLoaiDayHoGa"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("ThongTinTamDanHoGa2_DuongKinh"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Đường kính (m)
                                        <span class="arrow @(GetSortStyle("ThongTinTamDanHoGa2_DuongKinh"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("ThongTinTamDanHoGa2_ChieuDay"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Chiều dầy (m)
                                        <span class="arrow @(GetSortStyle("ThongTinTamDanHoGa2_ChieuDay"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("ThongTinTamDanHoGa2_D"))" class="text-center sortable">
                                    <div class="mr-3">
                                        D (m)
                                        <span class="arrow @(GetSortStyle("ThongTinTamDanHoGa2_D"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("ThongTinTamDanHoGa2_R"))" class="text-center sortable">
                                    <div class="mr-3">
                                        R (m)
                                        <span class="arrow @(GetSortStyle("ThongTinTamDanHoGa2_R"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("ThongTinTamDanHoGa2_C"))" class="text-center sortable">
                                    <div class="mr-3">
                                        C (m)
                                        <span class="arrow @(GetSortStyle("ThongTinTamDanHoGa2_C"))"></span>
                                    </div>
                                </th>

                                <th onclick="@(() => SortTable("countTrai"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Trái
                                        <span class="arrow @(GetSortStyle("countTrai"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("countPhai"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Phải
                                        <span class="arrow @(GetSortStyle("countPhai"))"></span>
                                    </div>
                                </th>
                                <th onclick="@(() => SortTable("Tong"))" class="text-center sortable">
                                    <div class="mr-3">
                                        Tổng
                                        <span class="arrow @(GetSortStyle("Tong"))"></span>
                                    </div>
                                </th>
                            </tr>

                        </thead>
                        @if (listPLTDHGBaoCaoTSLTDHGModel.Any())
                        {
                            <tbody>

                                @{
                                    int stt = 0;
                                }
                                @foreach (var item in listPLTDHGBaoCaoTSLTDHGModel)
                                {
                                    stt++;
                                    <tr>
                                        <td class="text-center"> @stt</td>
                                        <td class="text-center"> @item.ThongTinTamDanHoGa2_PhanLoaiDayHoGa </td>
                                        <td class="text-center"> @item.ThongTinTamDanHoGa2_DuongKinh </td>
                                        <td class="text-center"> @item.ThongTinTamDanHoGa2_ChieuDay  </td>
                                        <td class="text-center"> @item.ThongTinTamDanHoGa2_D </td>
                                        <td class="text-center"> @item.ThongTinTamDanHoGa2_R </td>
                                        <td class="text-center"> @item.ThongTinTamDanHoGa2_C </td>
                                        <td class="text-center"> @item.countTrai </td>
                                        <td class="text-center"> @item.countPhai </td>
                                        <td class="text-center"> @item.Tong </td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="25"> Không có dữ liệu</td>
                                </tr>
                            </tbody>
                        }


                    </table>
                </div>
                <div class="mt-4">
                    @if (listPLTDHGBaoCaoTSLTDHGModel.Any())
                    {
                        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" ChangePageSize="ChangePageSize"></Pagination>
                    }
                </div>
            </div>
        </div>
    </div>
    <Loading IsLoading="@isLoading" LoadingText="Đang tải dữ liệu..." />
</div>


@code {

    private bool isLoading = false;
    private List<SelectedItem> selectPLDHG = new();
    private int countTrai = 0;
    private int countPhai = 0;
    private int Tong = 0;
    public List<PLTDHGBaoCaoTSLTDHGModel> listPLTDHGBaoCaoTSLTDHGModel { get; set; } = new();
    public List<PLTDHGBaoCaoTSLTDHGModel> listModel { get; set; } = new();
    public MetaData MetaData { get; set; }
    public PLTDHGBaoCaoTSLTDHGModel tongSLTDanHGaModel { get; set; }

    // Khởi tạo màn hình
    protected override async Task OnInitializedAsync()
    {
        tongSLTDanHGaModel = new();
        await LoadData();

    }
    // Truy vấn data theo điều kiện tìm kiếm
    private async Task LoadData()
    {
        isLoading = true;
        listModel = new();
        var repository = await NuocMuaRepository.GetBaoCaoTongSLTDanHGa();
        listModel = repository;
        listPLTDHGBaoCaoTSLTDHGModel = Paging(listModel);
        if (listModel.Count > 0)
        {
            foreach (var item in listModel)
            {
                countTrai = (countTrai + item.countTrai);
                countPhai = (countPhai + item.countPhai);

            }
            Tong = countTrai + countPhai;
        }
        isLoading = false;
    }

    public async Task Search()
    {
        tongSLTDanHGaModel.PageNumber = 1;
        await LoadData();
    }

    // Sắp xếp data
    private void SortTable(string columnName)
    {
        listModel = SortService.SortTable(listModel, columnName);
        tongSLTDanHGaModel.PageNumber = 1;
        Paging(listModel);
    }


    // Get css cho chức năng sắp xếp
    private string GetSortStyle(string columnName)
    {
        return SortService.GetSortStyle(columnName);
    }

    // Xử lý trường hợp đổi page hiển thị
    private void SelectedPage(int page)
    {
        tongSLTDanHGaModel.PageNumber = page;
        Paging(listModel);
    }

    // Xử lý trường hợp đổi số lượng bản ghi hiển thị trên page
    private void ChangePageSize(int pageSize)
    {
        tongSLTDanHGaModel.PageNumber = 1;
        tongSLTDanHGaModel.pageSize = pageSize;
        Paging(listModel);
    }


    // Xử lý paging
    private List<PLTDHGBaoCaoTSLTDHGModel> Paging(List<PLTDHGBaoCaoTSLTDHGModel> listModels)
    {
        // Đếm số bản ghi thỏa mãn
        var count = listModels.Count();

        // Lọc bản ghi theo page hiện tại và page size
        listModels = listModels.Skip((tongSLTDanHGaModel.PageNumber - 1) * tongSLTDanHGaModel.PageSize).Take(tongSLTDanHGaModel.PageSize).ToList();

        // Xóa danh sách đang hiển thị trên màn hình
        listPLTDHGBaoCaoTSLTDHGModel.Clear();

        // Thêm những bản ghi sau khi lọc vào danh sách hiển thị
        foreach (var major in listModels)
        {
            listPLTDHGBaoCaoTSLTDHGModel.Add(major);
        }

        // Tạo pagelist mới

        var pagelist = new PageList<PLTDHGBaoCaoTSLTDHGModel>(listPLTDHGBaoCaoTSLTDHGModel, count, tongSLTDanHGaModel.PageNumber, tongSLTDanHGaModel.PageSize);
        MetaData = pagelist.MetaData;
        return listModels;
    }
    private async Task ExportExcel()
    {
        var sheetInfo = new SheetInfo1<object>
            {
                SheetName = "2.8 Tổng SL T.Đan H.Ga",
                Tables = new List<TableInfo<object>>
                {
                    new TableInfo<object>
                    {
                        Headers = ConstantHeaderExcel.TONGSLTDHG_HEADERS.Cast<ComplexHeader>().ToList(),
                        Data = listModel.Cast<object>().ToList()
                    },
                }
            };
        // Xuất Excel
        byte[] excelBytes = ExportExcelService.ExportToExcelWithMultipleTables(new List<SheetInfo1<object>> { sheetInfo });
        var fileName = "TONGSLTDHG.xlsx";
        using var stream = new MemoryStream(excelBytes);
        using var streamRef = new DotNetStreamReference(stream);
        await JSRuntime.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
    }
}
