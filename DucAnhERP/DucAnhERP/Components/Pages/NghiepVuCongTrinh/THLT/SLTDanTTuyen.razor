@page "/THLT/SLTDanTTuyen"

@* @using Microsoft.AspNetCore.Authorization *@
@* @attribute [Authorize] *@

<style>
    table {
        position: relative;
    }

        table thead tr td {
            /*   white-space: nowrap; */
            text-align: center;
            padding: 2px 5px;
        }
</style>
<div class="container-fluid">
    <div class="row m-2 d-flex justify-content-end">
        <div class="col-md-3 col-sm-6 text-end">
            <button class="btn btn-outline-primary me-2" @onclick="ThumbtackHeader" title="Ghim tiêu đề bảng">
                <i class="fas fa-thumbtack"></i>
            </button>
        </div>
    </div>
    <h5 class="mt-2">BẢNG THỐNG KẾ SỐ LƯỢNG CẤU KIỆN TRUYỀN DẪN THEO TUYẾN</h5>
    <div id="tableContainer ">
        <div class="row mt-3 p-2 our-table">
            <table id="tb1" class="table table-bordered table-hover" cellpadding="1" cellspacing="2">
                <thead class="bg-info @thumbtack">

                    <tr>
                        <th class="text-center"> STT</th>
                        <th class="text-center"> Tuyến đường</th>
                        <th class="text-center">Hình thức truyền dẫn</th>
                        <th class="text-center">Loại cấu kiện       </th>
                        <th class="text-center">Chiều dài 01CK      </th>
                        <th class="text-center">Đơn vị              </th>
                        <th class="text-center">Trái                </th>
                        <th class="text-center">Phải                </th>
                        <th class="text-center">Tổng                </th>

                    </tr>
                </thead>
                @if (listSLTDanTTuyenModel.Any())
                {
                    <tbody>
                        @{
                            int stt = 0;
                        }
                        @foreach (var item in listSLTDanTTuyenModel)
                        {
                            stt++;

                            <tr>
                                <td class="text-center">@stt</td>
                                <td class="text-center">@item.ThongTinLyTrinh_TuyenDuong</td>
                                <td>@item.ThongTinDuongTruyenDan_HinhThucTruyenDan_Name</td>
                                <td>@item.PhanLoaiCTronHopNhua_TenLoaiTruyenDanSauPhanLoai</td>
                                <td>@item.TTCDSLCauKienDuongTruyenDan_ChieuDai01CauKien</td>
                                <td>@item.DonVi</td>
                                <td>@Math.Round(item.Trai, 4)</td>
                                <td>@Math.Round(item.Phai, 4)</td>
                                <td>@Math.Round(item.Tong, 4)</td>
                            </tr>
                        }
                    </tbody>
                }
                else
                {
                    <tbody>
                        <tr>
                            <td colspan="5"> Không có dữ liệu</td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>
        <div class="mt-4">
            @if (listSLTDanTTuyenModel.Any())
            {
                <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" ChangePageSize="ChangePageSize"></Pagination>
            }
        </div>
    </div>

    <Loading IsLoading="@isLoading" LoadingText="Đang tải dữ liệu..." />
</div>


@code {
    [SupplyParameterFromForm]
    private NuocMua Input { get; set; } = new();
    public List<DanhMuc1> listDanhMuc = new();
    private bool isEdit = false;
    private bool isLoading = false;
    private DateTime baseTime;

    private string layoutClass = "d-flex justify-content-between";
    private string space = "ml-5";
    private string thumbtack = "";

    public List<SLTDanTTuyenModel> listSLTDanTTuyenModel { get; set; } = new();
    public List<SLTDanTTuyenModel> listModel { get; set; } = new();


    public MetaData MetaData { get; set; }
    public SLTDanTTuyenModel nuocMuaModel { get; set; }

    [Parameter]
    public ConfirmModal confirmModal { get; set; }

    // Khởi tạo màn hình
    protected override async Task OnInitializedAsync()
    {
        baseTime = DateTime.Now;
        nuocMuaModel = new();
        await LoadData();
    }

    // Truy vấn data theo điều kiện tìm kiếm
    private async Task LoadData()
    {
        isLoading = true;
        var helper = new DataConversionHelper();
        listDanhMuc = await DanhMucRepository.GetAll();
        SLTDanTTuyenModel nuocMuaModelSearch = new();

        var nuocMuaRepository = await NuocMuaRepository.GetBaoCaoSLTDTT();
        listModel = nuocMuaRepository;
        listSLTDanTTuyenModel = PagingLeft(nuocMuaRepository);

        isLoading = false;
        baseTime = DateTime.Now;
    }

    public string GetTenDanhMucById(string id)
    {
        var danhMuc = listDanhMuc.FirstOrDefault(dm => dm.Id == id);
        return danhMuc != null ? danhMuc.Ten : "";
    }

    // Sắp xếp data
    private void SortTableLeft(string columnName)
    {
        listModel = SortService.SortTable(listModel, columnName);
        nuocMuaModel.PageNumber = 1;
        PagingLeft(listModel);
    }


    // Get css cho chức năng sắp xếp
    private string GetSortStyle(string columnName)
    {
        return SortService.GetSortStyle(columnName);
    }

    // Xử lý trường hợp đổi page hiển thị
    private void SelectedPage(int page)
    {
        nuocMuaModel.PageNumber = page;
        PagingLeft(listModel);

    }

    // Xử lý trường hợp đổi số lượng bản ghi hiển thị trên page
    private void ChangePageSize(int pageSize)
    {
        nuocMuaModel.PageNumber = 1;
        nuocMuaModel.pageSize = pageSize;
        PagingLeft(listModel);

    }

    // Xử lý paging left
    private List<SLTDanTTuyenModel> PagingLeft(List<SLTDanTTuyenModel> nuocMuaModels)
    {
        // Đếm số bản ghi thỏa mãn
        var count = nuocMuaModels.Count();

        // Lọc bản ghi theo page hiện tại và page size
        nuocMuaModels = nuocMuaModels.Skip((nuocMuaModel.PageNumber - 1) * nuocMuaModel.PageSize).Take(nuocMuaModel.PageSize).ToList();

        // Xóa danh sách đang hiển thị trên màn hình
        listSLTDanTTuyenModel.Clear();

        // Thêm những bản ghi sau khi lọc vào danh sách hiển thị
        foreach (var major in nuocMuaModels)
        {
            listSLTDanTTuyenModel.Add(major);
        }

        // Tạo pagelist mới

        var pagelist = new PageList<SLTDanTTuyenModel>(listSLTDanTTuyenModel, count, nuocMuaModel.PageNumber, nuocMuaModel.PageSize);
        MetaData = pagelist.MetaData;
        return nuocMuaModels;
    }

    private void ThumbtackHeader()
    {
        thumbtack = thumbtack == "flex-header" ? "" : "flex-header";
    }

}
