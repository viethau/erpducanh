@page "/THLT/KTHHMDC"
@using DucAnhERP.ViewModel
@using DucAnhERP.Models
@using DucAnhERP.Components.Pages.Common
@using System.Linq
@using DucAnhERP.SeedWork
@using DucAnhERP.Helpers
@inject NavigationManager navigation
@inject INuocMuaRepository NuocMuaRepository
@inject IDanhMucRepository DanhMucRepository
@inject IPhanLoaiHoGaRepository PhanLoaiHoGaRepository
@inject IPhanLoaiTDHoGaRepository PhanLoaiTDHoGaRepository
@inject IPhanLoaiCTronHopNhuaRepository PhanLoaiCTronHopNhuaRepository
@inject IPhanLoaiMongCTronRepository PhanLoaiMongCTronRepository
@inject IPhanLoaiDeCongRepository PhanLoaiDeCongRepository
@inject IPhanLoaiThanhChongRepository PhanLoaiThanhChongRepository
@inject IPhanLoaiTDanTDanRepository PhanLoaiTDanTDanRepository
@inject DucAnhERP.Services.ToastService ToastService
@* @using Microsoft.AspNetCore.Authorization *@
@* @attribute [Authorize] *@

<style>
    table {
        position: relative;
    }

        table thead tr td {
            /*   white-space: nowrap; */
            text-align: center;
            padding: 2px 5px;
        }
</style>
<div class="container-fluid">
    <div class="row m-2 d-flex justify-content-end">
        <div class="col-md-3 col-sm-6 text-end">
            <button class="btn btn-outline-primary me-2" @onclick="ThumbtackHeader" title="Ghim tiêu đề bảng">
                <i class="fas fa-thumbtack"></i>
            </button>
        </div>
    </div>
    <div id="tableContainer ">
        <div class="our-table">
                <div class=" mt-1">
                    <h5 class="mt-2">BẢNG THÔNG TIN CẤU TẠO VÀ KÍCH THƯỚC HÌNH HỌC CỐNG TRÒN, MÓNG CỐNG TRÒN, MÓNG CỐNG HỘP, ĐẾ CỐNG TRÒN</h5>
                </div>
                <div class="mt-2">
                    <table id="tb-left" class="table table-bordered table-hover" cellpadding="1" cellspacing="2">
                        <thead class="bg-info @thumbtack">
                            <tr>
                                <th class="text-center" rowspan="2">STT</th>
                                <th class="text-center" colspan="4">Thông tin cống tròn, ống nhựa </th>
                                <th class="text-center" colspan="5">Thông tin móng cống tròn </th>
                                <th class="text-center" colspan="5">Thông tin móng cống hộp </th>
                                <th class="text-center" colspan="4">KTHH đế cống</th>
                            </tr>
                            <tr>
                                <th>Loại cống tròn</th>
                                <th>Chiều dài</th>
                                <th>C.Dầy phủ bì</th>
                                <th>Lòng sử dụng</th>
                                <th>Loại móng</th>
                                <th> C.Cao lót móng (m) </th>
                                <th> C.Rộng lót móng </th>
                                <th> C.Cao móng (m) </th>
                                <th> C.Rộng móng (m) </th>
                                <th>Loại móng</th>
                                <th> C.Cao lót móng (m) </th>
                                <th> C.Rộng lót móng </th>
                                <th> C.Cao móng (m) </th>
                                <th> C.Rộng móng (m) </th>
                                <th> Loại đế cống </th>
                                <th> D </th>
                                <th> R </th>
                                <th> C </th>

                            </tr>
                        </thead>
                        @if (listNuocMuaModel.Any())
                        {
                            <tbody>
                                @{
                                    int stt = 0;
                                }
                                @foreach (var item in listNuocMuaModel)
                                {
                                    stt++;
                                    <tr>
                                        <td class="text-center">@stt</td>
                                        <td class="text-center">@item.ThongTinLyTrinh_TuyenDuong</td>
                                        <td class="text-center">@item.ThongTinLyTrinhTruyenDan_TuLyTrinh</td>
                                        <td class="text-center">@item.ThongTinLyTrinhTruyenDan_DenLyTrinh</td>
                                        <td class="text-center">@item.PhanLoaiCTronHopNhua_TenLoaiTruyenDanSauPhanLoai</td>
                                        <td class="text-center">@item.TTCDSLCauKienDuongTruyenDan_TongChieuDai</td>
                                        <td class="text-center"> @item.TTMDRanhOngThang_ChieuRongDayDaoNho </td>
                                        <td class="text-center"> @item.TTMDRanhOngThang_TyLeMoMai</td>
                                        <td class="text-center"> @item.TTMDRanhOngThang_SoCanhMaiTrai</td>
                                        <td class="text-center"> @item.TTMDRanhOngThang_SoCanhMaiPhai</td>
                                        <td class="text-center"> @item.DTTB_CSDap</td>
                                        <td class="text-center"> @item.DTTB_CRDapDayLon</td>
                                        <td class="text-center"> @item.DTTB_DTichDap</td>
                                        <td class="text-center"> @item.TTKLDC_KlDapCatTruocChiemCho </td>
                                        <td class="text-center"> @item.TTKLDC_KlChiemCho </td>
                                        <td class="text-center"> @item.TTKLDC_KlDapCatSauChiemCho </td>

                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="16"> Không có dữ liệu</td>
                                </tr>
                            </tbody>
                        }
                    </table>
                </div>
                <div class="mt-4">
                    @if (listNuocMuaModel.Any())
                    {
                        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" ChangePageSize="ChangePageSize"></Pagination>
                    }
                </div>
         
        
        </div>
    </div>

    <Loading IsLoading="@isLoading" LoadingText="Đang tải dữ liệu..." />
</div>


@code {
    [SupplyParameterFromForm]
    private NuocMua Input { get; set; } = new();
    public List<DanhMuc1> listDanhMuc = new();
    private bool isEdit = false;
    private NuocMuaModel nuocMuaVM;
    private bool isLoading = false;
    private DateTime baseTime;

    private string layoutClass = "d-flex justify-content-between";
    private string space = "ml-5";
    private string thumbtack = "";

    public List<NuocMuaModel> listNuocMuaModel { get; set; } = new();
    public List<NuocMuaModel> listModel { get; set; } = new();

    public MetaData MetaData { get; set; }
    public NuocMuaModel nuocMuaModel { get; set; }

    [Parameter]
    public ConfirmModal confirmModal { get; set; }

    // Khởi tạo màn hình
    protected override async Task OnInitializedAsync()
    {
        baseTime = DateTime.Now;
        nuocMuaModel = new();
        await LoadData();
    }

    // Truy vấn data theo điều kiện tìm kiếm
    private async Task LoadData()
    {
        isLoading = true;
        var helper = new DataConversionHelper();
        listDanhMuc = await DanhMucRepository.GetAll();
        NuocMuaModel nuocMuaModelSearch = new();

        nuocMuaModelSearch.TraiPhai = 0;
        var nuocMuaRepositoryLeft = await NuocMuaRepository.GetAllByVM(nuocMuaModelSearch);
        List<NuocMuaModel> nuocmuasLeft;
        nuocmuasLeft = await ConvertDanhMuc(nuocMuaRepositoryLeft);
        listModel = nuocmuasLeft;
        listNuocMuaModel = Paging(nuocmuasLeft);

        nuocMuaModelSearch.TraiPhai = 1;
        var nuocMuaRepositoryRight = await NuocMuaRepository.GetAllByVM(nuocMuaModelSearch);

        isLoading = false;
        baseTime = DateTime.Now;
    }

    public async Task<List<NuocMuaModel>> ConvertDanhMuc(List<NuocMuaModel> listNuocMua)
    {
        List<NuocMuaModel> newList = new();
        if (listNuocMua.Count() > 0)
        {
            foreach (var item in listNuocMua)
            {
                item.ThongTinMongDuongTruyenDan_LoaiMong_Name = GetTenDanhMucById(item.ThongTinMongDuongTruyenDan_LoaiMong);
                if (item.ThongTinMongDuongTruyenDan_LoaiMong_Name.ToUpper().Trim() == "ĐẮP CÁT")
                {
                    newList.Add(item);
                }
            }
        }
        return newList;
    }

    public string GetTenDanhMucById(string id)
    {
        var danhMuc = listDanhMuc.FirstOrDefault(dm => dm.Id == id);
        return danhMuc != null ? danhMuc.Ten : "";
    }

    // Sắp xếp data
    private void SortTableLeft(string columnName)
    {
        listModel = SortService.SortTable(listModel, columnName);
        nuocMuaModel.PageNumber = 1;
        Paging(listModel);
    }
    

    // Get css cho chức năng sắp xếp
    private string GetSortStyle(string columnName)
    {
        return SortService.GetSortStyle(columnName);
    }

    // Xử lý trường hợp đổi page hiển thị
    private void SelectedPage(int page)
    {
        nuocMuaModel.PageNumber = page;
        Paging(listModel);
 
    }

    // Xử lý trường hợp đổi số lượng bản ghi hiển thị trên page
    private void ChangePageSize(int pageSize)
    {
        nuocMuaModel.PageNumber = 1;
        nuocMuaModel.pageSize = pageSize;
        Paging(listModel);

    }

    // Xử lý paging left
    private List<NuocMuaModel> Paging(List<NuocMuaModel> nuocMuaModels)
    {
        // Đếm số bản ghi thỏa mãn
        var count = nuocMuaModels.Count();

        // Lọc bản ghi theo page hiện tại và page size
        nuocMuaModels = nuocMuaModels.Skip((nuocMuaModel.PageNumber - 1) * nuocMuaModel.PageSize).Take(nuocMuaModel.PageSize).ToList();

        // Xóa danh sách đang hiển thị trên màn hình
        listNuocMuaModel.Clear();

        // Thêm những bản ghi sau khi lọc vào danh sách hiển thị
        foreach (var major in nuocMuaModels)
        {
            listNuocMuaModel.Add(major);
        }

        // Tạo pagelist mới

        var pagelist = new PageList<NuocMuaModel>(listNuocMuaModel, count, nuocMuaModel.PageNumber, nuocMuaModel.PageSize);
        MetaData = pagelist.MetaData;
        return nuocMuaModels;
    }

    private void ThumbtackHeader()
    {
        thumbtack = thumbtack == "flex-header" ? "" : "flex-header";
    }

}