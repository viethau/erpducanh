@page "/PKKL/HoGa"
@using DucAnhERP.ViewModel
@using DucAnhERP.Models
@using DucAnhERP.Components.Pages.Common
@using System.Linq
@using DucAnhERP.SeedWork
@using DucAnhERP.Helpers
@inject NavigationManager navigation
@inject IPKKLHoGaRepository PKKLHoGaRepository
@inject IPhanLoaiHoGaRepository PhanLoaiHoGaRepository
@inject IDanhMucRepository DanhMucRepository
@inject IDMTLThepRepository DMTLThepRepository

@inject DucAnhERP.Services.ToastService ToastService
<style>
    table {
        position: relative;
    }

        table thead tr td {
            /*   white-space: nowrap; */
            text-align: center;
            padding: 2px 5px;
        }

</style>
<div class="container-fluid">
    <div class="mt-3">
        <CustomModal IsVisible="isModalVisible" OnClose="HandleModalClose" Title="@TitleModal" Size="modal-lg">
            <bodytemplate>
                <editform model="Input" onvalidsubmit="handlevalidsubmit">
                    <dataannotationsvalidator />
                    <validationsummary />
                   
                    <h5>Thông tin cấu kiện</h5>
                    <div class="row">
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="table">loại cấu kiện</label>
                            <select2 id="select1" items="@selectPLHG" onchange="@OnSelectChangePLHG"></select2>
                            <validationmessage for="()=>Input.thongtinchunghoga_tenhogasauphanloai"></validationmessage>
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="ThongTinChungHoGa_HinhThucHoGa">Hình thức thi công<span class="text-danger">*</span></label>
                            <InputText @bind-value="Input.ThongTinChungHoGa_HinhThucHoGa" class="form-control" id="ThongTinChungHoGa_HinhThucHoGa" disabled />
                            <validationmessage for="() => Input.ThongTinChungHoGa_HinhThucHoGa" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="ThongTinChungHoGa_KetCauMuMo">Kiểu mũ mố<span class="text-danger"></span></label>
                            <InputText @bind-value="Input.ThongTinChungHoGa_KetCauMuMo" class="form-control" id="ThongTinChungHoGa_KetCauMuMo" disabled />
                            <validationmessage for="() => Input.ThongTinChungHoGa_KetCauMuMo" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="ThongTinChungHoGa_KetCauMuMo">Kiểu mũ mố<span class="text-danger"></span></label>
                            <InputText @bind-value="Input.ThongTinChungHoGa_KetCauMuMo" class="form-control" id="ThongTinChungHoGa_KetCauMuMo" disabled />
                            <validationmessage for="() => Input.ThongTinChungHoGa_KetCauMuMo" class="text-danger" />
                        </div>
                    </div>
                    <h5>Thông tin tên công tác thực tế</h5>
                    <div class="row">
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="vtlaykhoiluong">Loại bê tông<span class="text-danger"></span></label>
                            <InputText @oninput="OnInputChange" @bind-value="Input.LoaiBeTong" class="form-control" id="LoaiBeTonI" />
                            <validationmessage for="() => Input.vtlaykhoiluong" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="HangMucThiCong">Hạng mục công tác <span class="text-danger"></span></label>
                            <InputText @oninput="OnInputChange" @bind-value="Input.HangMucThiCong" class="form-control" id="HangMucThiCong" />
                            <validationmessage for="() => Input.HangMucThiCong" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TenCongTac">Tên công tác thực tế <span class="text-danger"></span></label>
                            <InputText @oninput="OnInputChange" @bind-value="Input.TenCongTac" class="form-control" id="TenCongTac" />
                            <validationmessage for="() => Input.TenCongTac" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="DonVi">Đơn vị <span class="text-danger"></span></label>
                            <InputText @oninput="OnInputChange" @bind-value="Input.DonVi" class="form-control" id="DonVi" />
                            <validationmessage for="() => Input.DonVi" class="text-danger" />
                        </div>
                    </div>
                    <h5>Thông tin KTHH tính khối lượng (m3)</h5>
                    <div class="row">
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="BeTongLotMong_D">D <span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.BeTongLotMong_D" id="BeTongLotMong_D" />
                            <validationmessage for="() => Input.BeTongLotMong_D" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="BeTongLotMong_R">R <span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.BeTongLotMong_R" class="form-control" id="BeTongLotMong_R" />
                            <validationmessage for="() => Input.BeTongLotMong_R" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="BeTongLotMong_C">C <span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.BeTongLotMong_C" class="form-control" id="BeTongLotMong_C" />
                            <validationmessage for="() => Input.BeTongLotMong_C" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="KTHH_DienTich">Diện tích<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.KTHH_DienTich" class="form-control" id="KTHH_DienTich" />
                            <validationmessage for="() => Input.KTHH_DienTich" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="GhiChu">Ghi chú<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.GhiChu" class="form-control" id="GhiChu" />
                            <validationmessage for="() => Input.GhiChu" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="SLCauKien">Số lượng cấu kiện<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.SLCauKien" class="form-control" id="SLCauKien" />
                            <validationmessage for="() => Input.SLCauKien" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="SLCauKien">KL 01 CK<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.SLCauKien" class="form-control" id="SLCauKien" />
                            <validationmessage for="() => Input.SLCauKien" class="text-danger" />
                        </div>
                    </div>
                    <h5>Thông tin cạnh tính diện tích (m2)</h5>
                    <div class="row">
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="CDai">Cạnh dài<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.BeTongLotMong_D" id="CDai" />
                            <validationmessage for="() => Input.CDai" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TTCDT_Crong">Cạnh rộng <span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.TTCDT_Crong" class="form-control" id="TTCDT_Crong" />
                            <validationmessage for="() => Input.TTCDT_Crong" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TTCDT_Cday">Cạnh đáy <span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.TTCDT_Cday" class="form-control" id="TTCDT_Cday" />
                            <validationmessage for="() => Input.TTCDT_Cday" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TTCDT_DT">Diện tích<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.TTCDT_DT" class="form-control" id="TTCDT_DT" />
                            <validationmessage for="() => Input.TTCDT_DT" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="GhiChu">Ghi chú<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.GhiChu" class="form-control" id="GhiChu" />
                            <validationmessage for="() => Input.GhiChu" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TTCDT_SLCK">Số lượng cấu kiện<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.TTCDT_SLCK" class="form-control" id="TTCDT_SLCK" />
                            <validationmessage for="() => Input.TTCDT_SLCK" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TTCDT_KL">KL<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.TTCDT_KL" class="form-control" id="TTCDT_KL" />
                            <validationmessage for="() => Input.TTCDT_KL" class="text-danger" />
                        </div>
                    </div>
                    <h5>Thông tin KL không phải M2,M3</h5>
                    <div class="row">
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="KLKP_KL">Khối lượng<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.KLKP_KL" class="form-control" id="KLKP_KL" />
                            <validationmessage for="() => Input.KLKP_KL" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="KLKP_Sl">Số lượng<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.KLKP_Sl" class="form-control" id="KLKP_Sl" />
                            <validationmessage for="() => Input.KLKP_Sl" class="text-danger" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="KL1CK_ChuaTruCC">KL 01CK Chưa trừ chiếm chỗ<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.KL1CK_ChuaTruCC" class="form-control" id="KL1CK_ChuaTruCC" />
                            <validationmessage for="() => Input.KL1CK_ChuaTruCC" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="KLCC1CK">KL chiếm chỗ/01CK<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.KLCC1CK" class="form-control" id="KLCC1CK" />
                            <validationmessage for="() => Input.KLCC1CK" class="text-danger" />
                        </div>
                        <div class="form-floating col-sm-6 col-md-3">
                            <label for="TKLCK_SauCC">Tổng KLCK sau chiếm chỗ<span class="text-danger"></span></label>
                            <InputNumber @oninput="OnInputChange" @bind-Value="Input.TKLCK_SauCC" class="form-control" id="TKLCK_SauCC" />
                            <validationmessage for="() => Input.TKLCK_SauCC" class="text-danger" />
                        </div>
                    </div>

                    <div class="row justify-content-end m-2">
                        <button class="btn btn-primary mr-2" type="submit">save</button>
                        <button class="btn btn-secondary" @onclick="HandleCancel">cancel</button>
                    </div>
                </editform>
            </bodytemplate>
        </CustomModal>
    </div>
    <div class="row m-3 ">
        <div class="col-md-9 col-sm-12">
            <EditForm Model="InputMD" FormName="Search" OnValidSubmit="@Search">
                <DataAnnotationsValidator />
                <div class="row">
                   @*  <div class="col-sm-4 col-md-3 mb-2">
                        <label for="Table">Loại cấu kiện</label>
                        <Select2 Id="select3" Items="@selectSearchPLHG" OnChange="@OnSelectChangeSearchPLHG"></Select2>
                        <ValidationMessage For="()=>InputMD.ThongTinChungHoGa_TenHoGaSauPhanLoai"></ValidationMessage>
                    </div>
                    <div class="form-floating col-sm-4 col-md-3">
                            <label for="Table">Loại thép</label>
                            <Select2 Id="select2" Items="@selectSearchLoaiThep" OnChange="@OnSelectChangeSearchLoaiThep"></Select2>
                            <ValidationMessage For="()=>InputMD.LoaiThep"></ValidationMessage>
                        </div> *@
                    <!-- Search Button -->
                    <div class="col-sm-4 col-md-2 mb-2">
                        <label>&nbsp;</label>
                        <button type="submit" class="btn btn-primary w-100">Tìm kiếm</button>
                    </div>
                     <div class="col-sm-4 col-md-1 mb-1">
                        <label>&nbsp;</label>
                        <button type="button" @onclick="ShowModal" class="btn btn-info form-control">Tạo mới</button>
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-md-3 col-sm-6 text-end">
            <button class="btn btn-outline-primary me-2" @onclick="ThumbtackHeader" title="Ghim tiêu đề bảng">
                <i class="fas fa-thumbtack"></i>
            </button>
        </div>
    </div>
    <div id="tableContainer ">
        <div class="table-report ">
            <div>
                <div class=" mt-1">
                    <h5 class="mt-2">BẢNG PHÂN KHAI KHỐI LƯỢNG HỐ GA</h5>
                </div>
                <div class=" mt-2">
                    <table id="tb-left" class="table table-hover table-bordered mt-3">
                        <thead class="bg-info @thumbtack">
                            <tr >
                                <th rowspan="2"></th>
                                <th rowspan="2">STT</th>
                                <th colspan="4">Thông tin cấu kiện</th>
                                <th colspan="3">Thông tin tên công tác thực tế</th>
                                <th colspan="7">Thông tin KTHH tính khối lượng (m3)</th>
                                <th colspan="6">Thông tin cạnh tính diện tích (m2)</th>
                                <th colspan="2">Thông tin KL không phải M2,M3</th>
                                <th rowspan="2">KL 01CK Chưa trừ chiếm chỗ</th>
                                <th rowspan="2">KL chiếm chỗ/01CK </th>
                                <th rowspan="2">Tổng KLCK sau chiếm chỗ</th>
                            </tr>
                            <tr>
                                
                                <th class="text-center">Loại cấu kiện			</th>
                                <th class="text-center">Hình thức thi công      </th>
                                <th class="text-center">Kiểu mũ mố              </th>
                                <th class="text-center">Loại bê tông            </th>
                                <th class="text-center">Hạng mục công tác       </th>
                                <th class="text-center">Tên công tác thực tế    </th>
                                <th class="text-center">Đơn vị                  </th>
                                <th class="text-center">D                       </th>
                                <th class="text-center">R                       </th>
                                <th class="text-center">C                       </th>
                                <th class="text-center">Diện tích               </th>
                                <th class="text-center">Ghi chú diện tích       </th>
                                <th class="text-center">Số lượng cấu kiện       </th>
                                <th class="text-center">KL 01 CK                </th>
                                <th class="text-center">Cạnh dài                </th>
                                <th class="text-center">Cạnh rộng               </th>
                                <th class="text-center">Cạnh đáy                </th>
                                <th class="text-center">Diện tích               </th>
                                <th class="text-center">Số lượng cấu kiện       </th>
                                <th class="text-center">KL                      </th>
                                <th class="text-center">Khối lượng              </th>
                                <th class="text-center">Số lượng                </th>

                            </tr>

                        </thead>
                        @if (listTKThepHGaModel.Any())
                        {
                            <tbody>
                                @{
                                    int stt = 0;
                                }
                                @foreach (var item in listTKThepHGaModel)
                                {
                                    stt++;
                                    <tr>
                                        <td class="d-flex nowrap">
                                                <div class="d-inline-block">
                                                    <button class="btn btn-sm btn-primary m-1" title="Chỉnh sửa" @onclick="()=>HandleEdit(item.Id)">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-primary m-1" title="Thêm vào sau" @onclick="()=>InsertLaterFlag(item.Flag)">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-danger m-1" title="Xóa" @onclick="()=>ConfirmDelete(item.Id ,stt.ToString())">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                         </td>
                                        <td>@stt</td>
                                        <td class="text-center"> @item.ThongTinChungHoGa_TenHoGaSauPhanLoai_Name</td>
                                        <td class="text-center"> @item.ThongTinChungHoGa_HinhThucHoGa      </td>
                                        <td class="text-center"> @item.ThongTinChungHoGa_KetCauMuMo        </td>
                                        <td class="text-center"> @item.LoaiBeTong                          </td>
                                        <td class="text-center"> @item.HangMucThiCong                      </td>
                                        <td class="text-center"> @item.TenCongTac                          </td>
                                        <td class="text-center"> @item.DonVi                               </td>
                                        <td class="text-center"> @item.BeTongLotMong_D                     </td>
                                        <td class="text-center"> @item.BeTongLotMong_R                     </td>
                                        <td class="text-center"> @item.BeTongLotMong_C                     </td>
                                        <td class="text-center"> @item.KTHH_DienTich                       </td>
                                        <td class="text-center"> @item.GhiChu                              </td>
                                        <td class="text-center"> @item.SLCauKien                           </td>
                                        <td class="text-center"> @item.KL1CK                               </td>
                                        <td class="text-center"> @item.TTCDT_CDai                          </td>
                                        <td class="text-center"> @item.TTCDT_Crong                         </td>
                                        <td class="text-center"> @item.TTCDT_Cday                          </td>
                                        <td class="text-center"> @item.TTCDT_DT                            </td>
                                        <td class="text-center"> @item.TTCDT_SLCK                          </td>
                                        <td class="text-center"> @item.TTCDT_KL                            </td>
                                        <td class="text-center"> @item.KLKP_KL                             </td>
                                        <td class="text-center"> @item.KLKP_Sl                             </td>
                                        <td class="text-center"> @item.KL1CK_ChuaTruCC                     </td>
                                        <td class="text-center"> @item.KLCC1CK                             </td>
                                        <td class="text-center"> @item.TKLCK_SauCC                         </td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="27"> Không có dữ liệu</td>
                                </tr>
                            </tbody>
                        }


                    </table>
                </div>
                <div class="mt-4">
                    @if (listTKThepHGaModel.Any())
                    {
                        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" ChangePageSize="ChangePageSize"></Pagination>
                    }
                </div>
            </div>
        </div>
    </div>
   <ConfirmModal @ref="confirmModal" OnResponseClick="HandleResponseClick"></ConfirmModal>
    <Loading IsLoading="@isLoading" LoadingText="Đang tải dữ liệu..." />
</div>


@code {

    private bool isLoading = false;
    private bool isModalVisible = false;
    private string TitleModal = "Thêm mới ";
    bool isEdit = false;
    string thumbtack = "";
    private DateTime baseTime;

    [Parameter]
    public ConfirmModal confirmModal { get; set; }

    private PKKLHoGa Input = new PKKLHoGa();
    private PKKLHoGaModel InputMD = new PKKLHoGaModel();

    private List<SelectedItem> selectPLHG = new();
    private void OnSelectChangePLHG(SelectedItem selectedItem)
    {
        Input.ThongTinChungHoGa_TenHoGaSauPhanLoai = selectedItem.Value;
    }
    private List<SelectedItem> selectSearchPLHG = new();
    private void OnSelectChangeSearchPLHG(SelectedItem selectedItem)
    {
        InputMD.ThongTinChungHoGa_TenHoGaSauPhanLoai = selectedItem.Value;
    }

    public string LoaiThep = "";


    public List<PKKLHoGaModel> listTKThepHGaModel { get; set; } = new();
    public List<PKKLHoGaModel> listModel { get; set; } = new();
    public MetaData MetaData { get; set; }
    public PKKLHoGaModel tKThepHoGaModel { get; set; }

    //bắt sự kiện khi thay đổi
    private System.Timers.Timer _typingTimer;
    private int _delay = 2000; // Thời gian chờ (2000ms)
    private void OnInputChange(ChangeEventArgs e)
    {
        // Dừng timer nếu đang chạy
        _typingTimer?.Stop();

        // Khởi động lại timer
        _typingTimer = new System.Timers.Timer(_delay);
        _typingTimer.Elapsed += OnTypingStopped;
        _typingTimer.AutoReset = false;
        _typingTimer.Start();
    }


    private async void OnTypingStopped(object sender, System.Timers.ElapsedEventArgs e)
    {


        await InvokeAsync(() =>
          {
              StateHasChanged();
          });
    }


    private void ShowModal()
    {
        isModalVisible = true;
    }

    private void HandleModalClose(bool isVisible)
    {
        isModalVisible = isVisible;
        isEdit = false;
    }

    private void HandleSave()
    {
        // Logic for saving
        isModalVisible = false;
    }

    private void HandleCancel()
    {
        // Logic for canceling
        isModalVisible = false;
        isEdit = false;
    }

    // Khởi tạo màn hình
    protected override async Task OnInitializedAsync()
    {
        try
        {

            await LoadData();
            var repository = await PhanLoaiHoGaRepository.GetAll();
            selectPLHG = new();
            foreach (var item in repository)
            {
                // Kiểm tra và thêm item
                if (!string.IsNullOrEmpty(item.Id) && !selectPLHG.Any(x => x.Value == item.Id))
                {
                    selectPLHG.Add(new SelectedItem
                        {
                            Value = item.Id,
                            Text = item.ThongTinChungHoGa_TenHoGaSauPhanLoai ?? ""
                        });
                }
            }
            selectPLHG.Insert(0, new SelectedItem { Value = "", Text = "Chọn...", IsSelected = true });
            selectSearchPLHG = selectPLHG;

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    // Truy vấn data theo điều kiện tìm kiếm
    private async Task LoadData()
    {
        try
        {
            isLoading = true;
            tKThepHoGaModel = new();
            var repository = await PKKLHoGaRepository.GetAllByVM(InputMD);
            listModel = repository;
            isLoading = false;

        }
        catch (Exception ex)
        {
            Console.WriteLine("Lỗi load data" + ex.Message);
            throw;
        }
        isLoading = false;
    }

    public async Task Search()
    {
        tKThepHoGaModel.PageNumber = 1;
        await LoadData();

    }

    private async Task HandleValidSubmit()
    {

        try
        {
            string[] ids = { Input.ThongTinChungHoGa_TenHoGaSauPhanLoai??"" };
            var isValidTenPL = await PhanLoaiHoGaRepository.CheckExclusive(ids,baseTime);
            var listExist = await PKKLHoGaRepository.GetExist(Input);
            if (isValidTenPL)
            {
                if (isEdit)
                {
                    string[] idss = { Input.Id }; 


                    if(listExist == null || listExist.Count ==0 )
                    {
                        bool isValid = await PKKLHoGaRepository.CheckExclusive(idss,baseTime);
                        if (isValid)
                        {
                            await PKKLHoGaRepository.Update(Input);
                            isModalVisible = false;
                            Input = new PKKLHoGa();
                            isEdit = false;
                            ToastService.ShowToast(
                                "Thông báo",
                                "Cập nhật thành công.",
                                cssClass: "toast-success",
                                iconClass: "fa fa-check-circle",
                                progressBarClass: "bg-info",
                                duration: 5000
                            );
                            await LoadData();
                        }
                    }else if(listExist.Count >0 && listExist[0].Id == Input.Id)
                    {
                        await PKKLHoGaRepository.Update(Input);
                        isModalVisible = false;
                        Input = new PKKLHoGa();
                        isEdit = false;
                        ToastService.ShowToast(
                            "Thông báo",
                            "Cập nhật thành công.",
                            cssClass: "toast-success",
                            iconClass: "fa fa-check-circle",
                            progressBarClass: "bg-info",
                            duration: 5000
                        );
                        await LoadData();
                    } else
                    {
                        ToastService.ShowToast(
                        "Thông báo",
                         "Đã tồn tại.",
                         cssClass: "toast-danger",
                         iconClass: "fa fa-exclamation-circle",
                         progressBarClass: "bg-info",
                         duration: 5000);
                    }

                }
                else
                {
                    if( listExist== null||listExist.Count == 0)
                    {
                        if (Flag > 0)
                        {
                            // Thêm mới thông tin
                            var id = await PKKLHoGaRepository.InsertLaterFlag(Input, Flag);
                            isModalVisible = false;
                            Input = new PKKLHoGa();
                            ToastService.ShowToast(
                                "Thông báo",
                                "Chèn thành công.",
                                cssClass: "toast-success",
                                iconClass: "fa fa-check-circle",
                                progressBarClass: "bg-info",
                                duration: 5000
                            );
                            await LoadData();
                            Flag = 0;
                        }
                        else
                        {
                            // Thêm mới thông tin
                            await PKKLHoGaRepository.Insert(Input);
                            isModalVisible = false;
                            Input = new PKKLHoGa();
                            ToastService.ShowToast(
                                "Thông báo",
                                "Thêm thành công.",
                                cssClass: "toast-success",
                                iconClass: "fa fa-check-circle",
                                progressBarClass: "bg-info",
                                duration: 5000
                            );
                            await LoadData();
                        }
                    }else
                    {
                        ToastService.ShowToast(
                        "Thông báo",
                         "Đã tồn tại.",
                         cssClass: "toast-danger",
                         iconClass: "fa fa-exclamation-circle",
                         progressBarClass: "bg-info",
                         duration: 5000);
                    }

                }
            }

        }
        catch (Exception ex)
        {
            ToastService.ShowToast("Thông báo", ex.Message, cssClass: "toast-danger", iconClass: "fa fa-exclamation-circle", progressBarClass: "bg-info", duration: 5000);
        }

    }

    private string deleteId;

    private async Task ConfirmDelete(string id, string Ten)
    {
        deleteId = id;
        confirmModal.Title = "Xác nhận xóa";
        confirmModal.message = $"Bạn có chắc chắn muốn xóa: {Ten}?";
        confirmModal.openModal();

    }

    private async Task HandleResponseClick(bool confirmed)
    {
        if (confirmed)
        {
            if (!string.IsNullOrEmpty(deleteId))
            {
                string[] ids = { deleteId };
                var result = await PKKLHoGaRepository.CheckExclusive(ids,baseTime);
                if (result)
                {
                     // Thực hiện hành động xóa
                    await PKKLHoGaRepository.DeleteById(deleteId);
                    ToastService.ShowToast("Thông báo", "Xóa phân loại thành công.", cssClass: "toast-success",iconClass: "fa fa-check-circle", progressBarClass: "bg-info", duration: 5000);
                    await LoadData();
                }
               
                deleteId = "";
            }
        }
    }


    private async Task HandleEdit(string id)
    {
        try
        {
            TitleModal = "Cập nhật loại TĐan TDẫn !";
            Input = await PKKLHoGaRepository.GetById(id);
            isEdit = true;
            isModalVisible = true;
            
            foreach (var item in selectPLHG)
            {
                item.IsSelected = item.Value == Input.ThongTinChungHoGa_TenHoGaSauPhanLoai;
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowToast(
                 "Thông báo",
                ex.Message,
                 cssClass: "toast-danger",
               iconClass: "fa fa-exclamation-circle",
                 progressBarClass: "bg-info",
                 duration: 5000
             );
       }

    }


      int Flag = 0;
    //thêm vào sau
    private void InsertLaterFlag(int flag)
    {
        Flag = flag;
        TitleModal = "Chèn loại cống !";
        isModalVisible = true;
    }


    // Sắp xếp data
    private void SortTable(string columnName)
    {
        listModel = SortService.SortTable(listModel, columnName);
        tKThepHoGaModel.PageNumber = 1;
        Paging(listModel);
    }


    // Get css cho chức năng sắp xếp
    private string GetSortStyle(string columnName)
    {
        return SortService.GetSortStyle(columnName);
    }

    // Xử lý trường hợp đổi page hiển thị
    private void SelectedPage(int page)
    {
        tKThepHoGaModel.PageNumber = page;
        Paging(listModel);
    }

    // Xử lý trường hợp đổi số lượng bản ghi hiển thị trên page
    private void ChangePageSize(int pageSize)
    {
        tKThepHoGaModel.PageNumber = 1;
        tKThepHoGaModel.pageSize = pageSize;
        Paging(listModel);
    }


    // Xử lý paging
    private List<PKKLHoGaModel> Paging(List<PKKLHoGaModel> listModels)
    {
        // Đếm số bản ghi thỏa mãn
        var count = listModels.Count();

        // Lọc bản ghi theo page hiện tại và page size
        listModels = listModels.Skip((tKThepHoGaModel.PageNumber - 1) * tKThepHoGaModel.PageSize).Take(tKThepHoGaModel.PageSize).ToList();

        // Xóa danh sách đang hiển thị trên màn hình
        listTKThepHGaModel.Clear();

        // Thêm những bản ghi sau khi lọc vào danh sách hiển thị
        foreach (var major in listModels)
        {
            listTKThepHGaModel.Add(major);
        }

        // Tạo pagelist mới

        var pagelist = new PageList<PKKLHoGaModel>(listTKThepHGaModel, count, tKThepHoGaModel.PageNumber, tKThepHoGaModel.PageSize);
        MetaData = pagelist.MetaData;
        return listModels;
    }

    private void ThumbtackHeader()
    {
        thumbtack = thumbtack == "flex-header" ? "" : "flex-header";
    }
}
