@inherits LayoutComponentBase
@using DucAnhERP.Components.Account.Pages
@using DucAnhERP.Components.Pages.Common
@using DucAnhERP.Models
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using DucAnhERP.Data
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<IdentityUser> SignInManager
<CascadingAuthenticationState>

    <AuthorizeView Context="authContext">
        <Authorized>
            @if (isDisplay)
            {
                <div class="wrapper">
                    <nav class="main-header navbar navbar-expand text-sm navbar-light bg-cyan">
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link" data-widget="pushmenu" role="button"><i class="fas fa-bars"></i></a>
                            </li>
                        </ul>
                        <div class="ml-auto">
                            <nav class="navbar navbar-expand-lg text-white">
                                <Notification @ref="notification" OnResponseClick="ShowModal" />
                                <div class="collapse navbar-collapse" id="navbarNavDropdown">
                                    <ul class="navbar-nav">
                                        <li class="nav-item">
                                            <a class="nav-link dropdown-toggle text-white" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                @user.LastName @user.FirstName
                                            </a>
                                            <div class="dropdown-menu align-content-center" aria-labelledby="navbarDropdownMenuLink">
                                                <a class="dropdown-item" href="#">Thông tin tài khoản</a>
                                                <a class="dropdown-item" href="/Account/Logout">Đăng xuất</a>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </nav>
                        </div>
                    </nav>
                </div>
                <NotificationModal @ref="notifModal" OnResponseClick="UpdateNotificationCount" />
                <div>
                    <NavMenu />
                    <div class="content-wrapper" style="min-height: 367.328px;">
                        @Body
                    </div>
                    <div id="sidebar-overlay"></div>
                </div>

            } else
            {
                @Body

                <div id="blazor-error-ui">
                    An unhandled error has occurred.
                    <a href="" class="reload">Reload</a>
                    <a class="dismiss">🗙</a>
                </div>
            }
        </Authorized>
        <NotAuthorized>
            @Body
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private ApplicationUser user;

    private NotificationModal notifModal;

    private Notification notification;

    private bool isDisplay = false;

    protected async override Task OnInitializedAsync()
    {
        var isValid = await LoginService.CheckLogin();

        isDisplay = isValid ? true : false;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            var userName = authState.User.Identity.Name;
            user = UserService.GetByUserName(userName);
        }

    }

    private async Task ShowModal()
    {
        await notifModal.ShowModal();
    }

    private async Task UpdateNotificationCount(bool isUpdate)
    {
        await notification.UpdateNotificationCount();
    }

}