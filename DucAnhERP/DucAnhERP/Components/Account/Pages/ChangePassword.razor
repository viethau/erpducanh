@page "/Account/ChangePassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using DucAnhERP.Models
@using DucAnhERP.Shared
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<IdentityUser> UserManager
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IEmailHistoryRepository EmailService
@inject UserState UserState
@inject HttpClient HttpClient

<PageTitle>Đổi mật khẩu</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-header bg-primary">
                    <h3 class="text-center">Đổi mật khẩu</h3>
                </div>

                <StatusMessage Message="@message" MessageClass="@messageClass" />
                @if (!string.IsNullOrEmpty(isFirstLogin))
                {
                    <div class="alert alert-warning" role="alert">
                        Bạn cần đổi mật khẩu khi đăng nhập lần đầu tiên vào hệ thống!
                    </div>
                }
                <EditForm Model="Input" OnValidSubmit="OnValidSubmitAsync" FormName="ChangePassword">
                    <DataAnnotationsValidator />
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Mật khẩu hiện tại<span class="text-danger">: </span></label>
                            <InputText @bind-Value="Input.CurrentPassword" id="currentPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => Input.CurrentPassword)" />
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">Mật khẩu mới<span class="text-danger">: </span></label>
                            <InputText @bind-Value="Input.NewPassword" id="newPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => Input.NewPassword)" />
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Xác nhận mật khẩu mới<span class="text-danger">: </span></label>
                            <InputText @bind-Value="Input.ConfirmPassword" id="confirmPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => Input.ConfirmPassword)" />
                        </div>
                        <button type="submit" class="btn btn-primary">Đổi mật khẩu</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    private ChangePasswordModel Input { get; set; } = new();

    private string? message;

    private string? messageClass;

    [SupplyParameterFromQuery]
    private string? isFirstLogin { get; set; }

    private async Task OnValidSubmitAsync()
    {
        var email = UserState.Email;
        UserState.Email = null;
        if (string.IsNullOrEmpty(email))
        {
            message = "Lỗi bất thường đã xảy ra, vui lòng liên hệ với Người quản trị hệ thống!";
            messageClass = Constant.DANGER;
            return;
        }
        var user = await UserManager.FindByNameAsync(email);
        var appUser = UserService.GetByUserName(email);
        if (user is null || appUser is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            message = "Lỗi bất thường đã xảy ra, vui lòng liên hệ với Người quản trị hệ thống!";
            messageClass = Constant.DANGER;
            return;
        }

        var result = await UserManager.ChangePasswordAsync(user, Input.CurrentPassword, Input.NewPassword);
        if (result.Succeeded)
        {
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            var callbackUrl = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ChangePasswordEmailConfirm").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = user.Id, ["code"] = code });

            // Gửi mail xác nhận đăng ký
            await SendMail(appUser, callbackUrl);

            RedirectManager.RedirectTo("Account/ChangePasswordConfirmation");

        }
        else
        {
            message = "Lỗi: Lỗi bất thường đã xảy ra, vui lòng liên hệ với Người quản trị hệ thống!";
            messageClass = Constant.DANGER;
            return;
        }
    }


    private async Task SendMail(ApplicationUser user, string callBackUrl)
    {
        // Tạo mới đối tượng
        var emailHistory = new EmailHistory();

        // Lấy nội dung mail từ template
        var content = "";

        content += "<div class=\"email-container\">";
        content += "<div class=\"header\">";
        content += "<h1>Xác Nhận Thay Đổi Mật Khẩu</h1>";
        content += "</div>";
        content += "<div class=\"content\">";
        content += "<p>Xin chào,</p>";
        content += "<p>Bạn đã yêu cầu thay đổi mật khẩu cho tài khoản của mình.</p>";
        content += "<p>Vui lòng nhấp vào đường dẫn dưới đây để xác nhận thay đổi mật khẩu:</p>";
        content += "<p><a href=\"" + callBackUrl + "\">Xác Nhận Thay Đổi Mật Khẩu</a></p>";
        content += "<p>Nếu bạn không yêu cầu thay đổi mật khẩu, vui lòng bỏ qua email này.</p>";
        content += "<p>Xin chân thành cảm ơn!</p>";
        content += "<p><strong>Lưu ý:</strong></p>";
        content += "<p>Email xác nhận này có hiệu lực trong vòng 1 phút.</p>";
        content += "<p>Đây là email được gửi tự động từ hệ thống, vui lòng không trả lời vào địa chỉ này. Mọi thông tin thắc mắc xin vui lòng liên hệ: <a href=\"mailto:xxxxxxxx@gmail.com\">xxxxxxxx@gmail.com</a></p>";
        content += "</div>";
        content += "<div class=\"footer\">";
        content += "<p>Trân trọng,</p>";
        content += "<p>Công ty cổ phần xây dựng Đức Anh</p>";
        content += "</div>";
        content += "</div>";

        // Gán giá trị cho các thuộc tính
        emailHistory.Id = Guid.NewGuid().ToString();
        emailHistory.Receiver = user.Email;
        emailHistory.Subject = "Xác Nhận Thay Đổi Mật Khẩu";
        emailHistory.Content = content;
        emailHistory.CompanyId = user.CompanyId;
        emailHistory.MajorId = "";
        emailHistory.ScreenId = "";
        emailHistory.CreateAt = DateTime.Now;
        emailHistory.CreateBy = "System";

        // Thực hiện gửi mail
        await EmailService.SendEmail(emailHistory);
    }




}
