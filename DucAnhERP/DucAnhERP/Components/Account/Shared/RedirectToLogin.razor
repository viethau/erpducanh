
@inject NavigationManager NavigationManager

@code {


    [CascadingParameter]
    public Task<AuthenticationState> StateAuthenticate { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authenticationState = await StateAuthenticate;
        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            var returnUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (string.IsNullOrWhiteSpace(returnUri))
            {
                NavigationManager.NavigateTo("Account/Login", true);
            }
            else
            {
                NavigationManager.NavigateTo($"Account/Login?returnUrl={returnUri}", true);
            }
        }
    }
}
